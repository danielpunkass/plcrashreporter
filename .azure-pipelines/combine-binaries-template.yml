parameters:
- name: xcframeworkName
  type: string

- name: outputPath
  type: string

- name: macosFrameworkPath
  type: string

steps:
- bash: |
    rm -rf "Release-xcframework/${{ parameters.xcframeworkName }}/macos-x86_64/CrashReporter.framework"
    cp -R "${{ parameters.macosFrameworkPath }}" "Release-xcframework/${{ parameters.xcframeworkName }}/macos-x86_64"
    lipo "Release-xcframework/${{ parameters.xcframeworkName }}/ios-i386_x86_64-simulator/CrashReporter.framework/CrashReporter" \
      "Release-iphonesimulator/CrashReporter.framework/CrashReporter" \
      -create -output "Release-xcframework/${{ parameters.xcframeworkName }}/ios-i386_x86_64-simulator/CrashReporter.framework/CrashReporter" || exit 1
    lipo "Release-xcframework/${{ parameters.xcframeworkName }}/ios-x86_64-maccatalyst/CrashReporter.framework/Versions/A/CrashReporter" \
      "Release-maccatalyst/CrashReporter.framework/Versions/A/CrashReporter" \
      -create -output "Release-xcframework/${{ parameters.xcframeworkName }}/ios-x86_64-maccatalyst/CrashReporter.framework/Versions/A/CrashReporter" || exit 1
    lipo "Release-xcframework/${{ parameters.xcframeworkName }}/tvos-x86_64-simulator/CrashReporter.framework/CrashReporter" \
      "Release-appletvsimulator/CrashReporter.framework/CrashReporter" \
      -create -output "Release-xcframework/${{ parameters.xcframeworkName }}/tvos-x86_64-simulator/CrashReporter.framework/CrashReporter" || exit 1

    rm -rf "Release/${{ parameters.xcframeworkName }}"
    for framework in Release-xcframework/${{ parameters.xcframeworkName }}/*/CrashReporter.framework; do
      xcframeworks+=( -framework "$framework")
    done
    xcodebuild -create-xcframework "${xcframeworks[@]}" -output "Release/${{ parameters.outputPath }}"
    ls "Release/${{ parameters.outputPath }}"
  displayName: 'Combine Binaries'
  workingDirectory: '$(Build.BinariesDirectory)'
